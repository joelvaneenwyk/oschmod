name: Prepare Release

on:
  workflow_dispatch:
  schedule:
    - cron: "40 22 * * 5"
  release:
    types: [published]

permissions:
  contents: read

env:
  PYPI_PACKAGE_NAME: oschmod

jobs:
  check-changes:
    runs-on: ubuntu-latest
    name: "Check Changes"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Check commits since last release
        id: count-commits
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git describe --tags --abbrev=0
          commits_since=$(git log $(git describe --tags --always --abbrev=0)..HEAD --oneline | wc -l)
          echo "Commits since last release: $commits_since"
          if [ "${commits_since}" == "0" ]; then
            echo "No release needed"
            exit 1
          else
            echo "Release needed"
          fi

  deploy:
    needs: check-changes
    name: "Deploy // PyPI"
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
      contents: read

    environment:
      name: pypi
      url: https://pypi.org/p/${{ env.PYPI_PACKAGE_NAME }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish Package
        uses: pypa/gh-action-pypi-publish@release/v1.9
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  bump-and-pull-request:
    needs: check-changes
    runs-on: ubuntu-latest

    outputs:
      NEW_VERSION: "New version number used for pull request"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Dependencies
        id: get-new-version
        run: |
          pip install --upgrade bump-my-version
          new_version="$(bump-my-version --dry-run --list patch | grep new_version= | sed -r s,"^.*=",,)"
          echo "NEW_VERSION=$new_version" >> "$GITHUB_OUTPUT"
          bump-my-version patch

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ github.token }}
          branch: autorelease/${{ steps.get-new-version.outputs.NEW_VERSION }}
          commit-message: Release version ${{ steps.get-new-version.outputs.NEW_VERSION }}
          title: Release version ${{ steps.get-new-version.outputs.NEW_VERSION }}
          body: This is an automated release that updates dependencies.

      - name: Show outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
