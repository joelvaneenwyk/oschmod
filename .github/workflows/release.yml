name: Cut release automatically

on:
  workflow_dispatch:
  schedule:
    - cron: "40 22 * * 5"

jobs:
  check-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Check commits since last release
        id: count-commits
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git describe --tags --abbrev=0
          commits_since=$(git log $(git describe --tags --always --abbrev=0)..HEAD --oneline | wc -l)
          echo "Commits since last release: $commits_since"
          if [ "${commits_since}" == "0" ]; then
            echo "No release needed"
            exit 1
          else
            echo "Release needed"
          fi

  bump-and-pull-request:
    needs: check-changes
    runs-on: ubuntu-latest

    env:
      NEW_VERSION: ""
      PULL_REQUEST_NUMBER: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup Rye
        id: setup-rye
        uses: eifinger/setup-rye@v2
        with:
          cache-prefix: "oschmod-cache-release"
          github-token: ${{ github.token }}

      - name: Do something if the cache was restored
        if: steps.setup-rye.outputs.cache-hit == 'true'
        run: echo "Cache was restored"

      - name: 🏎️ Enable uv in rye
        run: rye config --set-bool behavior.use-uv=true

      - name: 🏗 Sync dependencies
        run: rye sync

      - name: ⚙️ Run Build
        run: rye install bump-my-version

      - run: |
          rye install bump-my-version
          new_version="$(bump-my-version bump --dry-run --list patch | grep new_version= | sed -r s,"^.*=",,)"
          echo "NEW_VERSION=$new_version" >> "$GITHUB_ENV"
          echo "New version will be $new_version"
          bumpversion patch

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: autorelease/${{ env.NEW_VERSION }}
          commit-message: Release version ${{ env.NEW_VERSION }}
          title: Release version ${{ env.NEW_VERSION }}
          body: This is an automated release that updates dependencies.

      - name: Show outputs
        run: |
          echo "Pull Request Number - ${{ env.PULL_REQUEST_NUMBER }}"
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
